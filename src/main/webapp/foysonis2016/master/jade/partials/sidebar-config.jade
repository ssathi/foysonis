//- 
  Use this file to configure the sidebar menu
  Structure:
    menu {
      href: the link target location
      icon: the class name of the icon 
      active: 1 active | 0 inactive
      S: submenu object with same structure like described above
    }

- var firstMenu = {}

- firstMenu['Dashboard']                      = { href: "index.html", icon: 'icon icon-dashboar', active: 0};
- firstMenu['Receiving']                        = { href: "widgets.html", icon: 'icon icon-receiving', active: 0 };
- firstMenu['Orders']                        = { href: "widgets.html", icon: 'icon icon-orders', active: 0 };
- firstMenu['Inventory']                        = { href: "widgets.html", icon: 'icon icon-inventory', active: 0 };
- firstMenu['Shipping']                        = { href: "widgets.html", icon: 'icon icon-shipping', active: 0 };
- firstMenu['Reports']                        = { href: "widgets.html", icon: 'icon icon-reports', active: 0 };

- firstMenu['Administration']                       = { href: "#", icon: 'icon icon-admin', active: 0, S: {} };
- firstMenu['Administration']['S']['Buttons']       = { href: "button.html", active: 0 };
- firstMenu['Administration']['S']['Notifications'] = { href: "notifications.html", active: 0 };
- firstMenu['Administration']['S']['Spinners']      = { href: "spinners.html", active: 0};
- firstMenu['Administration']['S']['Animations']    = { href: "animations.html", active: 0 };

- firstMenu['Settings']                        = { href: "widgets.html", icon: 'icon icon-settings', active: 0 };

- var secondMenu = {}
 

//- This mixin iterates over the configuration array 
//- and prints the menu items
mixin build-menu-items(items)
  each val, key in items
    li(class=val.active?'active':'')
      - has_submenu = !!val.S
      a(href=val.href, title=key, data-toggle=(has_submenu?"collapse-next":""), class=(has_submenu?"has-submenu":"no-submenu"))
        if ( val.icon )
          em(class=val.icon)
        if ( val.alert )
          .label.label-primary.pull-right= val.alert
        span.item-text= key

      if (has_submenu)
        // START SubMenu item
        ul(class="nav collapse " + (val.active?'in':''))
          +build-menu-items(val.S)
        // END SubMenu item